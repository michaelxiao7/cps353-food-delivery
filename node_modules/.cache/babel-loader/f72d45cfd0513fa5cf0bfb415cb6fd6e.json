{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { getDefaultHeaderHeight, Header, HeaderBackButton, HeaderTitle } from '@react-navigation/elements';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\nimport memoize from '../../utils/memoize';\nexport default function HeaderSegment(props) {\n  const [leftLabelLayout, setLeftLabelLayout] = React.useState(undefined);\n  const [titleLayout, setTitleLayout] = React.useState(undefined);\n\n  const handleTitleLayout = e => {\n    const {\n      height,\n      width\n    } = e.nativeEvent.layout;\n    setTitleLayout(titleLayout => {\n      if (titleLayout && height === titleLayout.height && width === titleLayout.width) {\n        return titleLayout;\n      }\n\n      return {\n        height,\n        width\n      };\n    });\n  };\n\n  const handleLeftLabelLayout = e => {\n    const {\n      height,\n      width\n    } = e.nativeEvent.layout;\n\n    if (leftLabelLayout && height === leftLabelLayout.height && width === leftLabelLayout.width) {\n      return;\n    }\n\n    setLeftLabelLayout({\n      height,\n      width\n    });\n  };\n\n  const getInterpolatedStyle = memoize((styleInterpolator, layout, current, next, titleLayout, leftLabelLayout, headerHeight) => styleInterpolator({\n    current: {\n      progress: current\n    },\n    next: next && {\n      progress: next\n    },\n    layouts: {\n      header: {\n        height: headerHeight,\n        width: layout.width\n      },\n      screen: layout,\n      title: titleLayout,\n      leftLabel: leftLabelLayout\n    }\n  }));\n  const {\n    progress,\n    layout,\n    modal,\n    onGoBack,\n    headerTitle: title,\n    headerLeft: left = onGoBack ? props => /*#__PURE__*/React.createElement(HeaderBackButton, props) : undefined,\n    headerBackImage,\n    headerBackTitle,\n    headerBackTitleVisible = Platform.OS === 'ios',\n    headerTruncatedBackTitle,\n    headerBackAccessibilityLabel,\n    headerBackTestID,\n    headerBackAllowFontScaling,\n    headerBackTitleStyle,\n    headerTitleContainerStyle,\n    headerLeftContainerStyle,\n    headerRightContainerStyle,\n    headerBackgroundContainerStyle,\n    headerStyle: customHeaderStyle,\n    headerStatusBarHeight,\n    styleInterpolator,\n    ...rest\n  } = props;\n  const defaultHeight = getDefaultHeaderHeight(layout, modal, headerStatusBarHeight);\n  const {\n    height = defaultHeight\n  } = StyleSheet.flatten(customHeaderStyle || {});\n  const {\n    titleStyle,\n    leftButtonStyle,\n    leftLabelStyle,\n    rightButtonStyle,\n    backgroundStyle\n  } = getInterpolatedStyle(styleInterpolator, layout, progress.current, progress.next, titleLayout, headerBackTitle ? leftLabelLayout : undefined, typeof height === 'number' ? height : defaultHeight);\n  const headerLeft = left ? props => left({ ...props,\n    backImage: headerBackImage,\n    accessibilityLabel: headerBackAccessibilityLabel,\n    testID: headerBackTestID,\n    allowFontScaling: headerBackAllowFontScaling,\n    onPress: onGoBack,\n    label: headerBackTitle,\n    truncatedLabel: headerTruncatedBackTitle,\n    labelStyle: [leftLabelStyle, headerBackTitleStyle],\n    onLabelLayout: handleLeftLabelLayout,\n    screenLayout: layout,\n    titleLayout,\n    canGoBack: Boolean(onGoBack)\n  }) : undefined;\n  const headerTitle = typeof title !== 'function' ? props => /*#__PURE__*/React.createElement(HeaderTitle, _extends({}, props, {\n    onLayout: handleTitleLayout\n  })) : props => title({ ...props,\n    onLayout: handleTitleLayout\n  });\n  return /*#__PURE__*/React.createElement(Header, _extends({\n    modal: modal,\n    layout: layout,\n    headerTitle: headerTitle,\n    headerLeft: headerLeft,\n    headerLeftLabelVisible: headerBackTitleVisible,\n    headerTitleContainerStyle: [titleStyle, headerTitleContainerStyle],\n    headerLeftContainerStyle: [leftButtonStyle, headerLeftContainerStyle],\n    headerRightContainerStyle: [rightButtonStyle, headerRightContainerStyle],\n    headerBackgroundContainerStyle: [backgroundStyle, headerBackgroundContainerStyle],\n    headerStyle: customHeaderStyle,\n    headerStatusBarHeight: headerStatusBarHeight\n  }, rest));\n}","map":{"version":3,"sources":["HeaderSegment.tsx"],"names":["React","handleTitleLayout","e","width","setTitleLayout","titleLayout","height","handleLeftLabelLayout","leftLabelLayout","setLeftLabelLayout","getInterpolatedStyle","memoize","styleInterpolator","current","progress","next","layouts","header","layout","screen","title","leftLabel","headerTitle","headerLeft","left","onGoBack","props","headerBackTitleVisible","Platform","headerStyle","rest","defaultHeight","getDefaultHeaderHeight","StyleSheet","customHeaderStyle","backgroundStyle","headerBackTitle","backImage","accessibilityLabel","testID","allowFontScaling","onPress","label","truncatedLabel","labelStyle","onLabelLayout","screenLayout","canGoBack","Boolean","onLayout","headerStatusBarHeight"],"mappings":"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","sourcesContent":["import {\n  getDefaultHeaderHeight,\n  Header,\n  HeaderBackButton,\n  HeaderBackButtonProps,\n  HeaderTitle,\n} from '@react-navigation/elements';\nimport * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\n\nimport type {\n  Layout,\n  SceneProgress,\n  StackHeaderOptions,\n  StackHeaderStyleInterpolator,\n} from '../../types';\nimport memoize from '../../utils/memoize';\n\ntype Props = Omit<StackHeaderOptions, 'headerStatusBarHeight'> & {\n  headerStatusBarHeight: number;\n  layout: Layout;\n  title: string;\n  modal: boolean;\n  onGoBack?: () => void;\n  progress: SceneProgress;\n  styleInterpolator: StackHeaderStyleInterpolator;\n};\n\nexport default function HeaderSegment(props: Props) {\n  const [leftLabelLayout, setLeftLabelLayout] =\n    React.useState<Layout | undefined>(undefined);\n\n  const [titleLayout, setTitleLayout] =\n    React.useState<Layout | undefined>(undefined);\n\n  const handleTitleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setTitleLayout((titleLayout) => {\n      if (\n        titleLayout &&\n        height === titleLayout.height &&\n        width === titleLayout.width\n      ) {\n        return titleLayout;\n      }\n\n      return { height, width };\n    });\n  };\n\n  const handleLeftLabelLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      leftLabelLayout &&\n      height === leftLabelLayout.height &&\n      width === leftLabelLayout.width\n    ) {\n      return;\n    }\n\n    setLeftLabelLayout({ height, width });\n  };\n\n  const getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackHeaderStyleInterpolator,\n      layout: Layout,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      titleLayout: Layout | undefined,\n      leftLabelLayout: Layout | undefined,\n      headerHeight: number\n    ) =>\n      styleInterpolator({\n        current: { progress: current },\n        next: next && { progress: next },\n        layouts: {\n          header: {\n            height: headerHeight,\n            width: layout.width,\n          },\n          screen: layout,\n          title: titleLayout,\n          leftLabel: leftLabelLayout,\n        },\n      })\n  );\n\n  const {\n    progress,\n    layout,\n    modal,\n    onGoBack,\n    headerTitle: title,\n    headerLeft: left = onGoBack\n      ? (props: HeaderBackButtonProps) => <HeaderBackButton {...props} />\n      : undefined,\n    headerBackImage,\n    headerBackTitle,\n    headerBackTitleVisible = Platform.OS === 'ios',\n    headerTruncatedBackTitle,\n    headerBackAccessibilityLabel,\n    headerBackTestID,\n    headerBackAllowFontScaling,\n    headerBackTitleStyle,\n    headerTitleContainerStyle,\n    headerLeftContainerStyle,\n    headerRightContainerStyle,\n    headerBackgroundContainerStyle,\n    headerStyle: customHeaderStyle,\n    headerStatusBarHeight,\n    styleInterpolator,\n    ...rest\n  } = props;\n\n  const defaultHeight = getDefaultHeaderHeight(\n    layout,\n    modal,\n    headerStatusBarHeight\n  );\n\n  const { height = defaultHeight } = StyleSheet.flatten(\n    customHeaderStyle || {}\n  ) as ViewStyle;\n\n  const {\n    titleStyle,\n    leftButtonStyle,\n    leftLabelStyle,\n    rightButtonStyle,\n    backgroundStyle,\n  } = getInterpolatedStyle(\n    styleInterpolator,\n    layout,\n    progress.current,\n    progress.next,\n    titleLayout,\n    headerBackTitle ? leftLabelLayout : undefined,\n    typeof height === 'number' ? height : defaultHeight\n  );\n\n  const headerLeft: StackHeaderOptions['headerLeft'] = left\n    ? (props) =>\n        left({\n          ...props,\n          backImage: headerBackImage,\n          accessibilityLabel: headerBackAccessibilityLabel,\n          testID: headerBackTestID,\n          allowFontScaling: headerBackAllowFontScaling,\n          onPress: onGoBack,\n          label: headerBackTitle,\n          truncatedLabel: headerTruncatedBackTitle,\n          labelStyle: [leftLabelStyle, headerBackTitleStyle],\n          onLabelLayout: handleLeftLabelLayout,\n          screenLayout: layout,\n          titleLayout,\n          canGoBack: Boolean(onGoBack),\n        })\n    : undefined;\n\n  const headerTitle: StackHeaderOptions['headerTitle'] =\n    typeof title !== 'function'\n      ? (props) => <HeaderTitle {...props} onLayout={handleTitleLayout} />\n      : (props) => title({ ...props, onLayout: handleTitleLayout });\n\n  return (\n    <Header\n      modal={modal}\n      layout={layout}\n      headerTitle={headerTitle}\n      headerLeft={headerLeft}\n      headerLeftLabelVisible={headerBackTitleVisible}\n      headerTitleContainerStyle={[titleStyle, headerTitleContainerStyle]}\n      headerLeftContainerStyle={[leftButtonStyle, headerLeftContainerStyle]}\n      headerRightContainerStyle={[rightButtonStyle, headerRightContainerStyle]}\n      headerBackgroundContainerStyle={[\n        backgroundStyle,\n        headerBackgroundContainerStyle,\n      ]}\n      headerStyle={customHeaderStyle}\n      headerStatusBarHeight={headerStatusBarHeight}\n      {...rest}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}