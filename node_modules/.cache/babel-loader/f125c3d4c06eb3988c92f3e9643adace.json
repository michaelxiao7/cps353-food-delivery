{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native'; // This component will render a page which overflows the screen\n// if the container fills the body by comparing the size\n// This lets the document.body handle scrolling of the content\n// It's necessary for mobile browsers to be able to hide address bar on scroll\n\nexport default /*#__PURE__*/React.forwardRef(function CardSheet(_ref, ref) {\n  let {\n    enabled,\n    layout,\n    style,\n    ...rest\n  } = _ref;\n  const [fill, setFill] = React.useState(false);\n  React.useEffect(() => {\n    if (typeof document === 'undefined' || !document.body) {\n      // Only run when DOM is available\n      return;\n    }\n\n    const width = document.body.clientWidth;\n    const height = document.body.clientHeight;\n    setFill(width === layout.width && height === layout.height);\n  }, [layout.height, layout.width]);\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, {\n    ref: ref,\n    style: [enabled && fill ? styles.page : styles.card, style]\n  }));\n});\nconst styles = StyleSheet.create({\n  page: {\n    minHeight: '100%'\n  },\n  card: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["CardSheet.tsx"],"names":["rest","React","document","width","height","setFill","layout","enabled","styles","page","minHeight","card","flex","overflow"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,UAAA,EAAA,IAAA,QAAA,cAAA,C,CAQA;AACA;AACA;AACA;;AACA,eAAA,aAAe,KAAK,CAAL,UAAA,CAA8B,SAAA,SAAA,OAAA,GAAA,EAG3C;AAAA,MAFA;AAAA,IAAA,OAAA;AAAA,IAAA,MAAA;AAAA,IAAA,KAAA;AAA0B,OAAGA;AAA7B,GAEA;AACA,QAAM,CAAA,IAAA,EAAA,OAAA,IAAkBC,KAAK,CAALA,QAAAA,CAAxB,KAAwBA,CAAxB;AAEAA,EAAAA,KAAK,CAALA,SAAAA,CAAgB,MAAM;AACpB,QAAI,OAAA,QAAA,KAAA,WAAA,IAAmC,CAACC,QAAQ,CAAhD,IAAA,EAAuD;AACrD;AACA;AACD;;AAED,UAAMC,KAAK,GAAGD,QAAQ,CAARA,IAAAA,CAAd,WAAA;AACA,UAAME,MAAM,GAAGF,QAAQ,CAARA,IAAAA,CAAf,YAAA;AAEAG,IAAAA,OAAO,CAACF,KAAK,KAAKG,MAAM,CAAhBH,KAAAA,IAA0BC,MAAM,KAAKE,MAAM,CAAnDD,MAAO,CAAPA;AATFJ,GAAAA,EAUG,CAACK,MAAM,CAAP,MAAA,EAAgBA,MAAM,CAVzBL,KAUG,CAVHA;AAYA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,GAAG,EAFL,GAAA;AAGE,IAAA,KAAK,EAAE,CAACM,OAAO,IAAPA,IAAAA,GAAkBC,MAAM,CAAxBD,IAAAA,GAAgCC,MAAM,CAAvC,IAAA,EAAA,KAAA;AAHT,GAAA,CAAA,CADF;AAlBF,CAAe,CAAf;AA2BA,MAAMA,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE;AADP,GADyB;AAI/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EADA,CAAA;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AAJyB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\n\ntype Props = ViewProps & {\n  enabled: boolean;\n  layout: { width: number; height: number };\n  children: React.ReactNode;\n};\n\n// This component will render a page which overflows the screen\n// if the container fills the body by comparing the size\n// This lets the document.body handle scrolling of the content\n// It's necessary for mobile browsers to be able to hide address bar on scroll\nexport default React.forwardRef<View, Props>(function CardSheet(\n  { enabled, layout, style, ...rest },\n  ref\n) {\n  const [fill, setFill] = React.useState(false);\n\n  React.useEffect(() => {\n    if (typeof document === 'undefined' || !document.body) {\n      // Only run when DOM is available\n      return;\n    }\n\n    const width = document.body.clientWidth;\n    const height = document.body.clientHeight;\n\n    setFill(width === layout.width && height === layout.height);\n  }, [layout.height, layout.width]);\n\n  return (\n    <View\n      {...rest}\n      ref={ref}\n      style={[enabled && fill ? styles.page : styles.card, style]}\n    />\n  );\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    minHeight: '100%',\n  },\n  card: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}